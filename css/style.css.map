{"version":3,"sources":["global.scss","variables.scss","../blocks/sprite-png/sprite-png.scss"],"names":[],"mappings":"AAEA;EACE,iBAAgB;EAChB,UAAS;EACT,wCCCsD;EDAtD,eCN2C,EDO5C;;AAED;EACE,sBAAqB,EAMtB;EAPD;IAKI,2BAA0B,EAC3B;;AE6HC;EAjBF,4DAAuB;EALvB,6BAjG0B;EAuF1B,YAvFgC;EA2FhC,aA3FsC,EAyHnC;;AAFD;EAjBF,4DAAuB;EALvB,+BAtFkC;EA4ElC,YA5EwC;EAgFxC,aAhF8C,EA8G3C;;AAFD;EAjBF,4DAAuB;EALvB,+BA3E6B;EAiE7B,YAjEmC;EAqEnC,aArEyC,EAmGtC;;AAFD;EAjBF,4DAAuB;EALvB,iCAhEyC;EAsDzC,YAtD+C;EA0D/C,aA1DqD,EAwFlD;;AAFD;EAjBF,4DAAuB;EALvB,gCArDwC;EA2CxC,YA3C8C;EA+C9C,aA/CoD,EA6EjD;;AAFD;EAjBF,4DAAuB;EALvB,kCA1CuC;EAgCvC,YAhC6C;EAoC7C,aApCmD,EAkEhD","file":"style.css","sourcesContent":["// Не стилизуйте внутри этого файла БЭМ-блоки.\n\nbody {\n  min-width: 320px;\n  margin: 0;\n  font-family: $font-family;\n  color: $text-color;\n}\n\na {\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    text-decoration: underline;\n  }\n}\n","$gray-dark:                   hsl(0, 0%, 20%);\n$gray:                        hsl(0, 0%, 50%);\n$gray-light:                  hsl(0, 0%, 80%);\n\n$text-color:                  $gray-dark;\n\n$font-family:                 'Open Sans_my', sans-serif;\n$font-size:                   14px;\n\n$screen-xs:                   480px;\n$screen-sm:                   768px;\n$screen-md:                   992px;\n$screen-lg:                   1200px;\n$screen-xl:                   1920px;\n","// SCSS variables are information about icon's compiled state, stored under its original file name\n//\n// .icon-home {\n//   width: $icon-home-width;\n// }\n//\n// The large array-like variables contain all information about a single icon\n// $icon-home: x y offset_x offset_y width height total_width total_height image_path;\n//\n// At the bottom of this section, we provide information about the spritesheet itself\n// $spritesheet: width height image $spritesheet-sprites;\n$chrome-name: 'chrome';\n$chrome-x: 0px;\n$chrome-y: 0px;\n$chrome-offset-x: 0px;\n$chrome-offset-y: 0px;\n$chrome-width: 64px;\n$chrome-height: 64px;\n$chrome-total-width: 200px;\n$chrome-total-height: 132px;\n$chrome-image: '../img/sprite-018925869629063952.png';\n$chrome: (0px, 0px, 0px, 0px, 64px, 64px, 200px, 132px, '../img/sprite-018925869629063952.png', 'chrome', );\n$github-logo-name: 'github-logo';\n$github-logo-x: 68px;\n$github-logo-y: 0px;\n$github-logo-offset-x: -68px;\n$github-logo-offset-y: 0px;\n$github-logo-width: 64px;\n$github-logo-height: 64px;\n$github-logo-total-width: 200px;\n$github-logo-total-height: 132px;\n$github-logo-image: '../img/sprite-018925869629063952.png';\n$github-logo: (68px, 0px, -68px, 0px, 64px, 64px, 200px, 132px, '../img/sprite-018925869629063952.png', 'github-logo', );\n$kraken-name: 'kraken';\n$kraken-x: 0px;\n$kraken-y: 68px;\n$kraken-offset-x: 0px;\n$kraken-offset-y: -68px;\n$kraken-width: 64px;\n$kraken-height: 64px;\n$kraken-total-width: 200px;\n$kraken-total-height: 132px;\n$kraken-image: '../img/sprite-018925869629063952.png';\n$kraken: (0px, 68px, 0px, -68px, 64px, 64px, 200px, 132px, '../img/sprite-018925869629063952.png', 'kraken', );\n$male-and-female-name: 'male-and-female';\n$male-and-female-x: 68px;\n$male-and-female-y: 68px;\n$male-and-female-offset-x: -68px;\n$male-and-female-offset-y: -68px;\n$male-and-female-width: 64px;\n$male-and-female-height: 64px;\n$male-and-female-total-width: 200px;\n$male-and-female-total-height: 132px;\n$male-and-female-image: '../img/sprite-018925869629063952.png';\n$male-and-female: (68px, 68px, -68px, -68px, 64px, 64px, 200px, 132px, '../img/sprite-018925869629063952.png', 'male-and-female', );\n$musica-searcher-name: 'musica-searcher';\n$musica-searcher-x: 136px;\n$musica-searcher-y: 0px;\n$musica-searcher-offset-x: -136px;\n$musica-searcher-offset-y: 0px;\n$musica-searcher-width: 64px;\n$musica-searcher-height: 64px;\n$musica-searcher-total-width: 200px;\n$musica-searcher-total-height: 132px;\n$musica-searcher-image: '../img/sprite-018925869629063952.png';\n$musica-searcher: (136px, 0px, -136px, 0px, 64px, 64px, 200px, 132px, '../img/sprite-018925869629063952.png', 'musica-searcher', );\n$placeholder-name: 'placeholder';\n$placeholder-x: 136px;\n$placeholder-y: 68px;\n$placeholder-offset-x: -136px;\n$placeholder-offset-y: -68px;\n$placeholder-width: 64px;\n$placeholder-height: 64px;\n$placeholder-total-width: 200px;\n$placeholder-total-height: 132px;\n$placeholder-image: '../img/sprite-018925869629063952.png';\n$placeholder: (136px, 68px, -136px, -68px, 64px, 64px, 200px, 132px, '../img/sprite-018925869629063952.png', 'placeholder', );\n$spritesheet-width: 200px;\n$spritesheet-height: 132px;\n$spritesheet-image: '../img/sprite-018925869629063952.png';\n$spritesheet-sprites: ($chrome, $github-logo, $kraken, $male-and-female, $musica-searcher, $placeholder, );\n$spritesheet: (200px, 132px, '../img/sprite-018925869629063952.png', $spritesheet-sprites, );\n\n// The provided mixins are intended to be used with the array-like variables\n//\n// .icon-home {\n//   @include sprite-width($icon-home);\n// }\n//\n// .icon-email {\n//   @include sprite($icon-email);\n// }\n//\n// Example usage in HTML:\n//\n// `display: block` sprite:\n// <div class=\"icon-home\"></div>\n//\n// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\n//\n// // CSS\n// .icon {\n//   display: inline-block;\n// }\n//\n// // HTML\n// <i class=\"icon icon-home\"></i>\n@mixin sprite-width($sprite) {\n  width: nth($sprite, 5);\n}\n\n@mixin sprite-height($sprite) {\n  height: nth($sprite, 6);\n}\n\n@mixin sprite-position($sprite) {\n  $sprite-offset-x: nth($sprite, 3);\n  $sprite-offset-y: nth($sprite, 4);\n  background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n@mixin sprite-image($sprite) {\n  $sprite-image: nth($sprite, 9);\n  background-image: url(#{$sprite-image});\n}\n\n@mixin sprite($sprite) {\n  @include sprite-image($sprite);\n  @include sprite-position($sprite);\n  @include sprite-width($sprite);\n  @include sprite-height($sprite);\n}\n\n// The `sprites` mixin generates identical output to the CSS template\n//   but can be overridden inside of SCSS\n//\n// @include sprites($spritesheet-sprites);\n@mixin sprites($sprites) {\n  @each $sprite in $sprites {\n    $sprite-name: nth($sprite, 10);\n    .#{$sprite-name} {\n      @include sprite($sprite);\n    }\n  }\n}\n"]}